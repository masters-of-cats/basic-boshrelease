#!/bin/bash

set -e

JOB_NAME=basic
RUN_DIR=/var/vcap/sys/run/$JOB_NAME
LOG_DIR=/var/vcap/sys/log/$JOB_NAME
PID_FILEPATH=$RUN_DIR/$JOB_NAME.pid

export PATH=$PATH:/var/vcap/packages/basic/bin

create_dirs() {
  mkdir -p $RUN_DIR $LOG_DIR
}

simulate_something_taking_a_long_time_to_run() {
  log "begin sleep"
  sleep <%= p('basic.time_to_sleep_in_ctl') %>
  log "end sleep"
}

exit_early_if_basic_process_already_running() {
  if -f "$PID_FILEPATH"; then
    pid=$(cat "$PID_FILEPATH")
    if -d "/proc/$(pid)"; then
      log "basic process with pid $pid already running - bailing out early"
      exit 1
    fi
  fi

  log "no basic process running atm"
}

write_pidfile() {
  echo $$ > $PID_FILEPATH
  log "wrote pidfile"
}

start_basic() {
  log "starting basic"
  exec 1>> $LOG_DIR/basic.stdout.log
  exec 2>> $LOG_DIR/basic.stderr.log
  exec basic
}

stop_basic() {
  log "stopping basic"
  kill "$(cat $PID_FILEPATH)"
  rm -f $PID_FILEPATH
}

log() {
  local msg
  local time

  msg=$1
  time=$(date +"%e/%m/%Y - %T")

  echo "$time $msg" >> $LOG_DIR/basic_ctl.log
}

case $1 in
  start)
    exit_early_if_basic_process_already_running
    create_dirs
    simulate_something_taking_a_long_time_to_run
    write_pidfile
    start_basic
  ;;

  stop)
    stop_basic
  ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
  ;;
esac
